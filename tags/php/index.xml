<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>php on Ezequiel Cardoso</title><link>https://www.ezequielcardoso.com/tags/php/</link><description>Recent content in php on Ezequiel Cardoso</description><generator>Hugo -- gohugo.io</generator><language>es-ar</language><lastBuildDate>Fri, 14 Oct 2022 19:40:00 -0300</lastBuildDate><atom:link href="https://www.ezequielcardoso.com/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>Arrays in PHP</title><link>https://www.ezequielcardoso.com/blogs/arrays-in-php/</link><pubDate>Sat, 23 Jul 2022 00:00:00 -0300</pubDate><guid>https://www.ezequielcardoso.com/blogs/arrays-in-php/</guid><description>ARRANGEMENTS IN PHP (ARRAYS) An array is a variable that can hold multiple values at once.
Let&amp;rsquo;s look at two ways to declare an array:
Declaring values inside square brackets [ ]
$ages = [20, 18, 40]; echo &amp;#34;One of the ages is &amp;#34; . $ages[1] . &amp;#34; &amp;#34; . &amp;#34;years&amp;#34;; Declaring the values inside the array() function
$ages = array(20,18,40); echo &amp;#34;One of the ages is &amp;#34; . $ages[1] .</description></item><item><title>Other Operators in PHP</title><link>https://www.ezequielcardoso.com/blogs/operators-in-php/</link><pubDate>Thu, 21 Jul 2022 00:00:00 -0300</pubDate><guid>https://www.ezequielcardoso.com/blogs/operators-in-php/</guid><description>OTHER OPERATORS IN PHP ASSIGNMENT OPERATOR This operator resembles the variable that is to the left of the sign equals ( = ) to anything to the right of the equals sign ( = ).
$age_of_jaimito = ($age_of_pepito = 18) + 5; echo &amp;#34;Jumpy&amp;#39;s age is $Jumpy&amp;#39;s_age&amp;#34; . &amp;#34; Y &amp;#34; . &amp;#34;Jaimito&amp;#39;s age is $jaimito_age.&amp;#34;; INCREMENT OPERATOR ++ This operator increments the value of the initialized variable to the right of the = sign.</description></item><item><title>Relational Operators in PHP</title><link>https://www.ezequielcardoso.com/blogs/relational-operators-in-php/</link><pubDate>Tue, 19 Jul 2022 00:00:00 -0300</pubDate><guid>https://www.ezequielcardoso.com/blogs/relational-operators-in-php/</guid><description>RELATIONAL OPERATORS These operators help us compare two values.
OPERATOR == EQUAL DOES NOT COMPARE TYPES OF DATA
$a = 5; $b = 5; $b2 = &amp;#34;5&amp;#34;; $c = 9; $d = 2; var_dump( $a == $b ); //We ask PHP if $a is equal == to $b OPERATOR == IDENTICAL IF YOU COMPARE TYPES OF DATA
$a = 5; $b = 5; $b2 = &amp;#34;5&amp;#34;; $c = 9; $d = 2; var_dump( $a === $b ); //We ask PHP if $a is identical == to $b var_dump( $a === $b2 ); //We ask PHP if $a is identical == to $b2 OPERATOR !</description></item><item><title>Logical Operators in PHP</title><link>https://www.ezequielcardoso.com/blogs/logical-operators-in-php/</link><pubDate>Fri, 15 Jul 2022 00:00:00 -0300</pubDate><guid>https://www.ezequielcardoso.com/blogs/logical-operators-in-php/</guid><description>LOGICAL OPERATORS IN PHP Logical operators help us combine two or more statements in order determine if a sentence is true or false. In most cases it they need at least two statements and an operator.
To determine the truth of an expression we will use the so-called &amp;ldquo;TRUTH TABLES&amp;rdquo;.
Truth tables in logic are a tool represented in graphics of rows and columns showing all possible scenarios and conditions for a statement to be true or false.</description></item><item><title>Data type in PHP</title><link>https://www.ezequielcardoso.com/blogs/datatype-in-php/</link><pubDate>Tue, 12 Jul 2022 00:00:00 -0300</pubDate><guid>https://www.ezequielcardoso.com/blogs/datatype-in-php/</guid><description>Data Types in PHP A data type is simply a way of differentiating data by across its type for example: letters, numbers, words, etc&amp;hellip;
PHP being a weakly typed language does not need you to explicitly define a data type since by itself it can deduce what type you are using.
Numeric: Integer (integers) Float (decimal) Double (more precise decimal, with more number of decimals). Character string: Char (character) String (character string) Worthless: Null (no value inside) Undefined (there is a variable defined but without a determined value) If the interpreter finds two different variables, it will automatically interpret which data type it should work with.</description></item><item><title>Constants in PHP</title><link>https://www.ezequielcardoso.com/blogs/constants-in-php/</link><pubDate>Fri, 08 Jul 2022 00:00:00 -0300</pubDate><guid>https://www.ezequielcardoso.com/blogs/constants-in-php/</guid><description>CONSTANTS IN PHP What is a constant A constant is an indicator for a single value. Unlike variables, constants cannot change a value once it has been assigned. By default, a constant is case sensitive. By convention, IDENTIFIERS OF CONSTANTS ARE ALWAYS DECLARED IN UPPERCASE.
A constant will always keep its value intact from the moment it is declared.
Constants are always declared in uppercase. For example, if we declare the constant &amp;ldquo;PI_NUMBER&amp;rdquo;, the result will be the assigned value.</description></item><item><title>Variables in PHP</title><link>https://www.ezequielcardoso.com/blogs/variables-in-php/</link><pubDate>Fri, 14 Oct 2022 19:40:00 -0300</pubDate><guid>https://www.ezequielcardoso.com/blogs/variables-in-php/</guid><description>Variables in PHP What is a variable? A variable is something that can hold anything inside it and can modify, replace or remove the item you are saving at any time.
We can imagine a variable as a CONTAINER that can hold any VALUE!
Rules for naming variables When creating our variables in PHP we must follow the following four rules;
Variable names, after the $ sign, must start with a letter of the alphabet or the character _ (underscore).</description></item><item><title>Debugging in PHP</title><link>https://www.ezequielcardoso.com/blogs/debugging-in-php/</link><pubDate>Mon, 04 Jul 2022 00:00:00 -0300</pubDate><guid>https://www.ezequielcardoso.com/blogs/debugging-in-php/</guid><description>DEBUGGING Definition: Debugging is the process of detecting and removing of existing and potential errors (also called as ‘bugs’) in a software code that can cause it to behave unexpectedly or crash. To prevent incorrect operation of a software or system, debugging is used to find and resolve bugs or defects. When various subsystems or modules are tightly coupled, debugging becomes harder as any change in one module may cause more bugs to appear in another.</description></item><item><title>Basic syntax in PHP</title><link>https://www.ezequielcardoso.com/blogs/another-php-post/</link><pubDate>Sat, 02 Jul 2022 22:07:00 -0300</pubDate><guid>https://www.ezequielcardoso.com/blogs/another-php-post/</guid><description>Basic PHP syntax Although PHP is a fairly simple and very flexible language, we must take into account It has some rules regarding its syntax and structure.
When the interpreter parses a php file, always looks for opening and closing tags &amp;lt;?php and ?&amp;gt; allowing PHP to start and stop interpreting code between them.
&amp;lt;?php some php code...//parsed ?&amp;gt; There are three types of tags in PHP:
//NORMAL TAG // When the document has some PHP code embedded in html.</description></item></channel></rss>